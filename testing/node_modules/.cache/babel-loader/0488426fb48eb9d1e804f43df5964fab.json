{"ast":null,"code":"import _slicedToArray from \"/Users/bibi/Documents/studioVario/udemy/testing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/bibi/Documents/studioVario/udemy/testing/src/components/CommentBox.js\";\nimport React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\n\nfunction CommentBox() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var handleChange = useCallback(function (event) {\n    return setComment(event.target.value);\n  }, []);\n  var handleSubmit = useCallback(function (event) {\n    event.preventDefault(); // TODO: call an action creator and save comment\n\n    setComment('');\n  }, []);\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Add a Comment\"), React.createElement(\"textarea\", {\n    onChange: handleChange,\n    value: comment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Submit Comment\")));\n} // class CommentBox extends Component {\n//   state = { comment: \"\" };\n//   handleChange = event => {\n//     this.setState({\n//       comment: event.target.value\n//     });\n//   };\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     // TODO: call an action creator and save comment\n//     this.setState({ comment: \"\" });\n//   };\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <h4>Add a Comment</h4>\n//         <textarea onChange={this.handleChange} value={this.state.comment} />\n//         <div>\n//           <button>Submit Comment</button>\n//         </div>\n//       </form>\n//     );\n//   }\n// }\n\n\nexport default connect(actions, null)(CommentBox);","map":{"version":3,"sources":["/Users/bibi/Documents/studioVario/udemy/testing/src/components/CommentBox.js"],"names":["React","useState","useCallback","connect","actions","CommentBox","comment","setComment","handleChange","event","target","value","handleSubmit","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;;AAEA,SAASC,UAAT,GAAsB;AAAA,kBACYJ,QAAQ,CAAC,EAAD,CADpB;AAAA;AAAA,MACXK,OADW;AAAA,MACFC,UADE;;AAGlB,MAAMC,YAAY,GAAGN,WAAW,CAC5B,UAAAO,KAAK;AAAA,WAAIF,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAAA,GADuB,EAE5B,EAF4B,CAAhC;AAKA,MAAMC,YAAY,GAAGV,WAAW,CAAC,UAAAO,KAAK,EAAI;AACtCA,IAAAA,KAAK,CAACI,cAAN,GADsC,CAGtC;;AACAN,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAL+B,EAK7B,EAL6B,CAAhC;AAOA,SACI;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAU,IAAA,QAAQ,EAAEJ,YAApB;AAAkC,IAAA,KAAK,EAAEF,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAHJ,CADJ;AASH,C,CACD;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,OAAO,CAClBC,OADkB,EAElB,IAFkB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from 'actions'\n\nfunction CommentBox() {\n    const [comment, setComment] = useState('')\n\n    const handleChange = useCallback(\n        event => setComment(event.target.value),\n        []\n    )\n\n    const handleSubmit = useCallback(event => {\n        event.preventDefault()\n\n        // TODO: call an action creator and save comment\n        setComment('')\n    }, [])\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h4>Add a Comment</h4>\n            <textarea onChange={handleChange} value={comment} />\n            <div>\n                <button>Submit Comment</button>\n            </div>\n        </form>\n    )\n}\n// class CommentBox extends Component {\n//   state = { comment: \"\" };\n\n//   handleChange = event => {\n//     this.setState({\n//       comment: event.target.value\n//     });\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     // TODO: call an action creator and save comment\n//     this.setState({ comment: \"\" });\n//   };\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <h4>Add a Comment</h4>\n//         <textarea onChange={this.handleChange} value={this.state.comment} />\n//         <div>\n//           <button>Submit Comment</button>\n//         </div>\n//       </form>\n//     );\n//   }\n// }\n\nexport default connect(\n    actions,\n    null\n)(CommentBox)\n"]},"metadata":{},"sourceType":"module"}